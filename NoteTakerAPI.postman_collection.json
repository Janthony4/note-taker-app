{
	"info": {
		"_postman_id": "330b3b95-db2b-46c2-ba5e-ffe510c2c9e0",
		"name": "NoteTaker API",
		"description": "API collection for the NoteTaker application for Neue Datenbank Konzepte",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33964213"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"testpass123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"testpass123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout User",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notes",
			"item": [
				{
					"name": "Create Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseData = pm.response.json();\r",
									"\r",
									"if (responseData && responseData._id) {\r",
									"\tpm.collectionVariables.set(\"note_id\", responseData._id);\r",
									"\tconsole.log(\"Saved note_id:\", responseData._id);\r",
									"} else {\r",
									"\tconsole.warn(\"Note ID not found in response.\");\r",
									"}\r",
									"\r",
									"if (responseData && responseData.attachments && responseData.attachments.length > 0) {\r",
									"\tlet fileId = responseData.attachments[0].fileId;\r",
									"\tpm.collectionVariables.set(\"file_id\", fileId);\r",
									"}\r",
									"console.log(\"Saved file_id:\", pm.collectionVariables.get(\"file_id\"));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "My First Note",
									"type": "text"
								},
								{
									"key": "content",
									"value": "This is the content of my first note",
									"type": "text"
								},
								{
									"key": "attachments",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/notes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Notes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/notes?sort=pinned",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notes"
							],
							"query": [
								{
									"key": "sort",
									"value": "pinned"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Note",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/notes/{{note_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notes",
								"{{note_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Note",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Updated Note Title",
									"type": "text"
								},
								{
									"key": "content",
									"value": "Updated note content",
									"type": "text"
								},
								{
									"key": "labels",
									"value": "[\"important\", \"work\"]",
									"type": "text"
								},
								{
									"key": "newAttachments",
									"type": "file",
									"src": "/path/to/new-file.pdf"
								},
								{
									"key": "deletedAttachments",
									"value": "[\"{{file_id_to_delete}}\"]",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/notes/{{note_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notes",
								"{{note_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Note",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/notes/{{note_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notes",
								"{{note_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Toggle Pin Status",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"isPinned\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/notes/{{note_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notes",
								"{{note_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Toggle Favorite Status",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"isFavourite\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/notes/{{note_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notes",
								"{{note_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Attachments",
			"item": [
				{
					"name": "Get Attachment",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/files/{{file_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"files",
								"{{file_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Attachment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/notes/{{note_id}}/attachments/{{file_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"notes",
								"{{note_id}}",
								"attachments",
								"{{file_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5000"
		},
		{
			"key": "note_id",
			"value": ""
		},
		{
			"key": "file_id",
			"value": ""
		},
		{
			"key": "file_id_to_delete",
			"value": ""
		}
	]
}